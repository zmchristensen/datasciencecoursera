ls
ls()
debug(ls)
ls()
set.seed(1)
set.seed(1)
rpois(5,2)
?rnorm
setwd("~/Documents/Development/datasciencecoursera/Getting and Cleaning Data")
?download.file
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "q3.1.csv")
?read.table
data <- tbl_df(read.table("q3.1.csv"))
import(dplyr)
library(dplyr)
data <- tbl_df(read.table("q3.1.csv"))
data <- tbl_df(read.csv("q3.1.csv"))
moreThan10Acres <- data$ACR == 3
moreThan10Acres
head(data)
rm(moreThan10Acres)
agricultureLogical <- data$ACR == 3 & data$AGS == 6
sum(agricultureLogical)
is.na(agricultureLogical) <- FALSE
sum(agricultureLogical)
head(agricultureLogical)
agricultureLogical[is.na(agricultureLogical)] <- FALSE
head(agricultureLogical)
sum(agricultureLogical)
which(agricultureLogical)
library(jpeg)
install.packages("jpeg")
library(jpeg)
?readJEPG
?readJPEG
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
readJPEG("jeff.jpg", native = TRUE)
readJPEG("jeff.jpg", native = TRUE)
image<- readJPEG("jeff.jpg", native = TRUE)
?quintile
?quantiles
?quantile
quantile(image)
rm(image)
rm(agricultureLogical)
rm(data)
countries <- tbl_df(read.csv("countries.csv"))
education <- tbl_df(read.csv("education.csv"))
?match
colnames(education)
match(education$CountryCode, )
colnames(countries)
head(countries)
match(education$CountryCode, countries$X)
matches <- match(education$CountryCode, countries$X)
length(matches)
countries
arrange(countries, desc(X.4))
arrange(countries, X.4)
countries %>% filter(!is.na(X))
countries %>% filter(!is.na(X)) %>% arrange(X.4)
countries %>% filter(!is.na(X) & X != "") %>% arrange(X.4)
result <- countries %>% filter(!is.na(X) & X != "") %>% arrange(X.4)
result
head(result, 20)
tail(result, 20)
result
result$X.3
colnames(countries)
colnames(education)
colnames(countries)
head(countries)
head(result)
countries[,"X.4"] <- as.numeric(countries[,"X.4"])
countries[,5]
class(countres[1,5])
class(countries[1,5])
countries[1,5] <- as.numeric(countries[1,5])
head(countries)
countries[1,5] <- "16,244,600"
countries[1,5] <- as.factor("16,244,600")
head(countries)
countries <- tbl_df(read.csv("countries.csv"))
head(countries)
countres[1,5] <- grepl(",", "", countries[1,5])
countries[1,5] <- grepl(",", "", countries[1,5])
head(countries)
countries <- tbl_df(read.csv("countries.csv"))
fac<- c( "0" , "0" , "1,5" , "0" , "0" , "8" )
#[1] "0"   "0"   "1,5" "0"   "0"   "8"
fac <- as.numeric( sub(",", ".", fac) )
countries[1,5] <- as.numeric( sub(",", ".", countries[1,5]) )
countries <- tbl_df(read.csv("countries.csv", stringsAsFactors = FALSE))
countries[1,5] <- as.numeric( sub(",", ".", countries[1,5]) )
head(countries)
countries[1,5] <- as.numeric( sub(",", ".", countries[1,5]) )
head(countries)
countries <- tbl_df(read.csv("countries.csv", stringsAsFactors = FALSE))
head(countries)
class(countries,5)
class(countries[,5])
class(countries[1,5])
class(countries[[1,5]])
head(countries)
countries[1,5] <- as.numeric( sub(",", ".", countries[[1,5]]) )
countries <- tbl_df(read.csv("countries.csv", stringsAsFactors = FALSE))
countries[[1,5]] <- as.numeric( sub(",", ".", countries[[1,5]]) )
countries <- tbl_df(read.csv("countries.csv", stringsAsFactors = FALSE))
countries <- (read.csv("countries.csv", stringsAsFactors = FALSE)
countries[[1,5]] <- as.numeric( sub(",", ".", countries[[1,5]]) )
countries <- read.csv("countries.csv", stringsAsFactors = FALSE)
countries[[1,5]] <- as.numeric( sub(",", ".", countries[[1,5]]) )
countries <- read.csv("countries.csv", stringsAsFactors = FALSE)
class(countries[,5])
class(countries[1,5])
countries[1,5] <- as.numeric( sub(",", ".", countries[1,5]) )
head(countries)
countries <- read.csv("countries.csv", stringsAsFactors = FALSE)
head(countries)
sub(",", "", countries[1,5])
?sub
gsub(",", "", countries[1,5])
countries <- read.csv("countries.csv", stringsAsFactors = FALSE)
head(countries)
countries[1,5] <- as.numeric( gsub(",", ".", countries[1,5]) )
countries <- read.csv("countries.csv", stringsAsFactors = FALSE)
countries[1,5] <- as.numeric( gsub(",", "", countries[1,5]) )
head(countries)
countries[,5] <- as.numeric( gsub(",", "", countries[,5]) )
head(countries)
arrange(countries, X.4)
summary(countries)
image <- readJPEG("jeff.jpg")
quantile(image, c(30,80))
quantile(image, probs = c(0.30,0.80))
quantile(image)
image
quantile(image)
?quantile
image <- readJPEG("jeff.jpg", native = TRUE)
?quantile
quantile(image)
quantile(image, probs = c(0.30,0.80))
rm(image)
rm(fac)
countries %>% group_by
education
education %>% group_by(Income.Group)
ed_groups <- education %>% group_by(Income.Group)
?summarise
?aggregate
education %>% aggregate(Income.Group, mean)
education %>% aggregate(c(education$Income.Group, mean)
)
education %>% aggregate(c(education$Income.Group), mean)
education %>% aggregate(c(Group = education$Income.Group), mean)
education %>% aggregate(by = c(education$Income.Group), mean)
education %>% aggregate(list(education$Income.Group), mean)
education
head(education)
colnames(education)
?join
inner_join(countries, education, by = c("X" = "CountryCode"))
joined <- inner_join(countries, education, by = c("X" = "CountryCode"))
joined
head(joined)
colnames(joined)
keep <- joined[c(1,4,12)]
keep
head(countries)
keep <- joined[c(1,5,12)]
keep
?aggregate
aggregate(keep, list(keep[,3]), mean)
keep[is.na(keep)] <- 0
keep
aggregate(keep, list(keep[,3]), mean)
countries
join
joined
colnames(joined)
head(joined)
countryCode <- filter(joined, X != "")
countryCode
head(countryCode)
countryCode <- arrange(X.4)
?arrange
countryCode <- arrange(countryCode, X.4)
head(countryCode)
keep <- countryCode[1,2,4,5,12]
keep <- countryCode[,c(1,2,4,5,12)]
keep
head(keep)
?summarise
aggregate
?aggregate
aggregate(keep, list(Income.Group), mean)
colnames(keep)
aggregate(keep, list("Income.Group"), mean)
aggregate(keep, list(keep$Income.Group), mean)
keep <- filter(keep, X.1 != "")
keep
aggregate(keep, list(keep$Income.Group), mean)
keep[,2]
keep[,2] <- as.numeric(keep[,2])
keep[,2]
aggregate(keep, list(keep$Income.Group), mean)
?quantile
countries
table(keep)
table(keep$Income.Group, quantile(keep$X.2))
quantile(keep$X.2)
keep
quantile(keep$X.1)
table(keep$Income.Group, quantile(keep$X.1))
q <- quantile(keep$X.1)
q
table(keep$X.1, keep$Income.Group)
country
countryCode
head(countryCode)
keep
rm(countries)
rm(countryCode)
rm(ed_groups)
rm(education)
rm(joined)
rm(keep)
rm(result)
rm(matches)
rm(q)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "idaho.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "idaho.csv")
idaho <- read.csv("idaho.csv")
colnames(idaho)
dim(idaho)
?strsplit
strsplit(idaho, "wgtp")
strsplit(colnames(idaho), "wgtp")
strings <- strsplit(colnames(idaho), "wgtp")
strings[123]
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "gpd.csv")
gpd <- read.csv("gpd.csv")
head(gpd)
head(gpd, 20)
gpd[, 5] <- gsub(",", "", gpd[,5])
head(gpd, 20)
mean(gpd[,5])
?filter
mean(filter(gpd, X != "")$X.3)
gpd %>% filter(X != "")
gpd %>% filter(X != "") %>% mean
gpd_filtered <- gpd %>% filter(X != "")
mean(gpd_filtered[,5])
gpd_filtered[210,5]
gpd <- read.csv("gpd.csv")
gpd[210,5]
gpd
gpd[,5] <- gsup(",", "", gpd[,5])
gpd[,5] <- gsub(",", "", gpd[,5])
gpd[,5] <- gsub("..", "", gpd[,5])
gpd
gpd <- read.csv("gpd.csv")
gpd[,5] <- gsub(",", "", gpd[,5])
gpd
gpd[,5] <- as.numeric(gpd[,5])
gpd
head(gpd)
gpd_filtered(gpd, X != "")
gpd_filtered<- filter(gpd, X != "")
head(gpd)
head(gpd_filtered)
mean(gpd_filtered$X.3)
gpd_filtered$X.3
>mean
?mean
mean(gpd_filtered$X.3, na.rm = TRUE)
mean(gpd$X.3, na.rm = TRUE)
gpd
gpd <- read.csv("gpd.csv")
gpd
head(gpd, 20)
?as.numeric
tail(gpd, 20)
tail(gpd, 50)
tail(gpd, 100)
gpd
tail(gpd)
head(gpd)
gpd_filter <- filter(gpd, X != "")
dim(gpd_filter)
tail(gpd)
tail(gpd, 20)
tail(gpd_filter, 20)
rm(gpd_filtered)
tail(gpd_filter, 20)
tail(gpd_filter, 50)
gpd_filter <- filter(gpd, Gross.domestic.product.2012 != "")
dim(gpd_filter)
gpd_filter[,2]
ranked <- gpd_filter[2:191,]
ranked
ranked[,5] <- gsub(",", "", ranked[,5])
mean(ranked[,5])
ranked
ranked[,5] <- as.numeric(ranked[,5])
mean(ranked[,5])
?grep
head(ranked)
countryNames <- ranked$X.2
countryNames
grep("*United", countryNames)
grep("^United", countryNames)
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "education.csv")
education <- read.csv("education.csv")
colnames(education)
head(education)
head(gpd)
head(gpd, 10)
head(gpd, 100)
head(education, 20)
tail(education, 20)
inner_join(gpd_filter, education, )
?inner_join
inner_join(gpd_filter, education, by = c("X" = "CountryCode"))
joined <- inner_join(gpd_filter, education, by = c("X" = "CountryCode"))
head(joined)
colnames(joined)
fiscal <- joined[,c(1,19)]
fiscal
grep("June", fiscal[2])
grep("*June", fiscal[2])
?grep
grepl("June", fiscal[2])
grepl("June", fiscal[,2])
sum(grepl("June", fiscal[,2]))
library(quantmod)
package.install("quantmod")
install.packages("quantmod")
library(quantmod)
?getSymbols
amzn <- getSymbols("AMZN", auto.assign = FALSE)
sampleTimes <- index(amzn)
dim(sampleTimes)
sampleTimes
length(sampleTimes)
as.date
library(lubridate)
dates <- lubridate(sampleTimes)
dates <- ymd(sampleTimes)
dates
wday(dates[1])
wday(dates[1], label=TRUE)
wday(dates, label=TRUE)
wday(dates)
sum(wday(dates) = 2)
sum(wday(dates) == 2)
first2012 <- ymd(20120101)
last2012 <- tmd(20121231)
last2012 <- ymd(20121231)
2012 <- dates >= first2012 & dates <= last2012
dates2012 <- dates >= first2012 & dates <= last2012
lenght(dates2012)
length(dates2012)
length(dates)
dates
first2012
?year
year(dates[1])
dates2012 <- year(dates) == 2012
length(dates2012)
dates2012 <- dates[year(dates) == 2012]
length(dates2012)
sum(wday(dates2012) == 4)
wday(dates2012)
wday(dates2012, label=TRUE)
sum(wday(dates2012) == 2)
grepl("June", fiscal[,2])
which(grepl("June", fiscal[,2]))
fiscal[9,]
june<- which(grepl("June", fiscal[,2]))
fiscal[june
,]
june<- which(grepl("Fiscal year end: June 30", fiscal[,2]))
length(june)
